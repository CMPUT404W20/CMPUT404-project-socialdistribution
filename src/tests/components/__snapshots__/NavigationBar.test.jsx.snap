// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Navigation bar Component should render correctly 1`] = `
<Navbar
  className="navigationBar"
  collapseOnSelect={true}
  expand="sm"
  fixed="top"
  variant="light"
>
  <NavbarBrand
    className="logo"
  >
    <img
      alt="app logo"
      src="logo.svg"
      width="85%"
    />
  </NavbarBrand>
  <div
    className="search-input-container"
  >
    <InputGroup
      className="searchBar"
      size="sm"
    >
      <FormControl
        aria-describedby="basic-addon1"
        aria-label="Search"
        placeholder="Search"
      />
    </InputGroup>
  </div>
  <NavbarToggle
    aria-controls="responsive-navbar-nav"
    label="Toggle navigation"
  />
  <NavbarCollapse
    id="responsive-navbar-nav"
  >
    <Nav
      className="mr-auto"
      fill={false}
      justify={false}
    />
    <Nav
      fill={false}
      justify={false}
    >
      <NavLink
        as={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "displayName": "NavLink",
            "propTypes": Object {
              "activeClassName": [Function],
              "activeStyle": [Function],
              "aria-current": [Function],
              "className": [Function],
              "exact": [Function],
              "innerRef": [Function],
              "isActive": [Function],
              "location": [Function],
              "onClick": [Function],
              "replace": [Function],
              "strict": [Function],
              "style": [Function],
              "target": [Function],
              "to": [Function],
            },
            "render": [Function],
          }
        }
        disabled={false}
        exact={true}
        to="/home"
      >
        <HomeOutlinedIcon />
      </NavLink>
      <NavLink
        as={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "displayName": "NavLink",
            "propTypes": Object {
              "activeClassName": [Function],
              "activeStyle": [Function],
              "aria-current": [Function],
              "className": [Function],
              "exact": [Function],
              "innerRef": [Function],
              "isActive": [Function],
              "location": [Function],
              "onClick": [Function],
              "replace": [Function],
              "strict": [Function],
              "style": [Function],
              "target": [Function],
              "to": [Function],
            },
            "render": [Function],
          }
        }
        disabled={false}
        exact={true}
        to="/friends"
      >
        <PeopleAltOutlinedIcon />
      </NavLink>
      <NavLink
        as={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "displayName": "NavLink",
            "propTypes": Object {
              "activeClassName": [Function],
              "activeStyle": [Function],
              "aria-current": [Function],
              "className": [Function],
              "exact": [Function],
              "innerRef": [Function],
              "isActive": [Function],
              "location": [Function],
              "onClick": [Function],
              "replace": [Function],
              "strict": [Function],
              "style": [Function],
              "target": [Function],
              "to": [Function],
            },
            "render": [Function],
          }
        }
        disabled={false}
        exact={true}
        to="/notifications"
      >
        <div
          className="notification-icon-wrapper"
        >
          <NotificationsNoneOutlinedIcon />
          <div
            className="notification-badge-wrapper"
          >
            <span
              className="notification-badge"
            >
              2
            </span>
          </div>
        </div>
      </NavLink>
    </Nav>
    <Nav
      fill={false}
      justify={false}
    >
      <NavDropdown
        alignRight={true}
        id="username-dropdown"
        title="Username"
      >
        <DropdownItem
          as={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "displayName": "NavLink",
              "propTypes": Object {
                "activeClassName": [Function],
                "activeStyle": [Function],
                "aria-current": [Function],
                "className": [Function],
                "exact": [Function],
                "innerRef": [Function],
                "isActive": [Function],
                "location": [Function],
                "onClick": [Function],
                "replace": [Function],
                "strict": [Function],
                "style": [Function],
                "target": [Function],
                "to": [Function],
              },
              "render": [Function],
            }
          }
          disabled={false}
          exact={true}
          to={
            Object {
              "pathname": "/profile/Username",
              "state": Object {
                "userID": null,
                "username": "Username",
              },
            }
          }
        >
          Profile
        </DropdownItem>
        <DropdownItem
          as={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "displayName": "SafeAnchor",
              "render": [Function],
            }
          }
          disabled={false}
          href="#"
        >
          Settings
        </DropdownItem>
        <DropdownDivider
          role="separator"
        />
        <DropdownItem
          as={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "displayName": "NavLink",
              "propTypes": Object {
                "activeClassName": [Function],
                "activeStyle": [Function],
                "aria-current": [Function],
                "className": [Function],
                "exact": [Function],
                "innerRef": [Function],
                "isActive": [Function],
                "location": [Function],
                "onClick": [Function],
                "replace": [Function],
                "strict": [Function],
                "style": [Function],
                "target": [Function],
                "to": [Function],
              },
              "render": [Function],
            }
          }
          disabled={false}
          exact={true}
          onSelect={[Function]}
          to="/"
        >
          Logout
        </DropdownItem>
      </NavDropdown>
    </Nav>
  </NavbarCollapse>
</Navbar>
`;
